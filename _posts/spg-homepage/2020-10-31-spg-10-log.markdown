---
layout: post
title: "spg 회고록 010회차"
date: 2020-10-31
categories:
  - "SPG-hompage"
description:
image: "../../../../../side/img/spg/spg_logo.jpg"
image-sm: "../../../../../side/img/spg/spg_logo.jpg"
---
<h2>Spring Data JPA선택한 이유와 다른 JDBC 라이브러리 비교</h2>
<figure>
    <h3>JDBC(Java Database Conncetor)</h3>
	<ul>
	    <li>1997년 자바와 데이터 베이스 연결해주는 하나의 라이브러리 -> 온라인 비즈니스가 성장해서 DB의 중요성을 인지</li>
	    <li>연결 순서
	        <ul>    
	            <li>Driver Manager : database type에 맞게 설정 (Oracle, Mysql 등을 선택 하여 해당 DB관련 객체 생성)</li>
	            <li>Connection : schema와 DB주소 연결</li>
	            <li>STMT : query 문 삽입</li>
	            <li>ResultSet : 결과 수렴</li>
	        </ul>
	        <li>불편한 점 : 중복 코드 많음(Manager 생성, connection 코드 작성 등), 쿼리를 일일이 써야함, connection관리를 일일히 해야함</li>
	    </li>
	</ul>            
    <h3>SQL Mapper</h3>
	<ul>
	    <li>Spring JDBC
	        <ul>
	            <li>JDBC template에 DataSource를 주입시켜주고 해당 JDBC Template객체만 사용 -> config 에 맞게 주입 해준다 -> Spring boot 는 application.propertis에 설정 -> DB과제 이 라이브러리 사용함</li>
	            <li>예외 처리, 트랜젝션 처리, 결과에 대한 루프처리, reset, stmt 등 닫기 기능을 자동으로 제공하는 장점이 있음</li>
	        </ul>
	    </li>
	    <li>IBatis/MyBatis
	        <ul>
	            <li>SQL를 분리하는 것 : Query를 Java 내부 코드에서 xml로 옮기서 작업함</li>
	            <img src="../../../../../side/img/spg/10/10-mybatis.png" alt="mybatis" style="width: 90%"/>
                <li>초기 mybatis config file로 부터 session생성</li>
	            <li>session에 mapper로 하나의 interface로 연결</li>
	            <li>method에 query를 mapping 해준다.</li>
	        </ul>
	    </li>
	</ul>            
            
</figure>
